apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubesphere
    component: $APP_NAME-$BRANCH_NAME
    tier: backend
  name: $APP_NAME-$BRANCH_NAME
  namespace: nginx-project
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: kubesphere
      component: $APP_NAME-$BRANCH_NAME
      tier: backend
  template:
    metadata:
      labels:
        app: kubesphere
        component: $APP_NAME-$BRANCH_NAME
        tier: backend
    spec:
      volumes:
        - name: volume-$APP_NAME-$BRANCH_NAME-$BUILD_NUMBER
          configMap:
            name: $APP_NAME-$BRANCH_NAME-nginx-conf
            defaultMode: 420
      containers:
        - name: $APP_NAME
          image: $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$BRANCH_NAME-$BUILD_NUMBER
          ports:
            - name: http-80
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: volume-$APP_NAME-$BRANCH_NAME-$BUILD_NUMBER
              readOnly: true
              mountPath: /etc/nginx/conf.d/
          env:
            - name: CACHE_IGNORE
              value: js|html
            - name: CACHE_PUBLIC_EXPIRATION
              value: 3d
          readinessProbe:
            httpGet:
              path: /
              port: 80
            timeoutSeconds: 10
            failureThreshold: 30
            periodSeconds: 5
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 20m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: aliyun-registry
